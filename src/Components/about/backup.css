/* Styles For .my-assistant div */

:is(.my-assistant-room) {

    --my-robot-room-transition: all 1.5s ease-in-out;
    --my-robot-room-gap: 0;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--my-robot-room-gap);

    transition: var(--my-robot-room-transition);

}

/* Styles For .my-assistant div */

/* Styles For .my-robot div And It's Children's */

:is(.my-robot) {

    --robot-background: linear-gradient(45deg, #0C0D0C, #0E0E0D);
    --robot-border: 0.5rem solid #050605;
    --robot-transition-for-all-parts: all 1.5s ease-in-out;

    display: flex;
    justify-content: center;
    transform: translateY(6rem);

    transition: var(--robot-transition);
    z-index: 1;

}

:is(.my-robot-body),
:is(.my-robot-fingers) {

    position: relative;
    transition: var(--robot-transition-for-all-parts);

}

:is(.my-robot-body)::before,
:is(.my-robot-body)::after {

    --robot-body-before-after-transform: translateX(-50%);

    --robot-body-before-width: 12.4rem;
    --robot-body-before-clip-path: polygon(50% 25%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
    --robot-body-before-border-bottom: var(--robot-border);

    --robot-body-after-width: 8rem;
    --robot-body-after-height: 12rem;
    --robot-body-after-clip-path: polygon(0 0, 0% 20%, 16% 100%, 25% 100%, 50% 50%, 75% 100%, 85% 100%, 70% 48%, 84% 100%, 100% 20%, 100% 0, 50% 0);

    content: '';

    position: absolute;
    left: 50%;
    transform: var(--robot-body-before-after-transform);

    background: var(--robot-background);

    transition: var(--robot-transition-for-all-parts);

}

:is(.my-robot-body)::before {

    top: -4.8rem;

    width: var(--robot-body-before-width);
    aspect-ratio: 1;
    clip-path: var(--robot-body-before-clip-path);
    border-bottom: var(--robot-body-before-border-bottom);

    z-index: 1;

}

:is(.my-robot-body)::after {

    top: 7.5rem;

    width: var(--robot-body-after-width);
    height: var(--robot-body-after-height);
    clip-path: var(--robot-body-after-clip-path);

    z-index: -1;

}

:is(.my-robot-power) {

    --robot-power-transform: translate(-50%, -50%);
    --robot-power-width: 6rem;
    --robot-power-height: 2.5rem;
    --robot-power-clip-path: polygon(50% 15%, 75% 25%, 100% 40%, 86% 70%, 80% 84%, 50% 85%, 20% 84%, 14% 70%, 0 40%, 25% 25%);
    --robot--power-background: linear-gradient(45deg, #050605, #050605, #050605);

    position: absolute;
    top: -10.5rem;
    left: 50%;
    transform: var(--robot-power-transform);

    width: var(--robot-power-width);
    height: var(--robot-power-height);
    background: var(--robot--power-background);
    clip-path: var(--robot-power-clip-path);

    transition: var(--robot-transition-for-all-parts);
    z-index: 1;

}

:is(.my-robot-power)::after {

    content: "";

    display: block;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 1.15rem;
    aspect-ratio: 1;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);

    transition: var(--robot-transition-for-all-parts);
    animation: givingPowerToMyRobot 5s linear infinite;

    /* opacity: 0;
    visibility: hidden; */

    cursor: pointer;

}

/* @keyframes givingPowerToMyRobot {
    50% {
        opacity: 1;
        visibility: visible;
        background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    }
} */

:is(.my-robot-face) {

    --robot-face-transform: translate(-50%, -50%);
    --robot-face-width: 9rem;

    display: flex;
    justify-content: center;
    align-items: center;

    position: relative;
    top: -5.9rem;
    left: 50%;
    transform: var(--robot-face-transform);

    width: var(--robot-face-width);
    aspect-ratio: 1;
    background: var(--robot-background);
    border-radius: 50%;

    transition: var(--robot-transition-for-all-parts);
    z-index: -1;

}

:is(.my-robot-face):before {

    --robot-face-before-transform: translateX(-50%);
    --robot-face-before-width: 5rem;
    --robot-face-before-height: 3rem;
    --robot-face-before-background: linear-gradient(45deg, #050605, #050605, #050605);

    content: "";

    position: absolute;
    top: 52%;
    left: 50%;
    transform: var(--robot-face-before-transform);

    width: var(--robot-face-before-width);
    height: var(--robot-face-before-height);
    background: var(--robot-face-before-background);

    border-bottom-left-radius: 70px;
    border-bottom-right-radius: 70px;

    transition: var(--robot-transition-for-all-parts);
    cursor: pointer;

}

:is(.my-robot-face):hover:before {

    --robot-face-hover-before-height: 2rem;
    height: var(--robot-face-hover-before-height);

    border-bottom-left-radius: 35px;
    border-bottom-right-radius: 35px;

}

:is(.my-robot-eyes) {

    --robot-eyes-gap: 0.7rem;
    --robot-eyes-transition: all 1.5s ease-in-out;

    display: flex;
    gap: var(--robot-eyes-gap);

    position: relative;
    top: -1.5rem;

    transition: var(--robot-eyes-transition);

}

:is(.my-robot-eyes) .my-robot-eye {

    --robot-eye-width: 2rem;
    --robot-eye-background: #ffffff;
    --robot-eye-transition: all 1.5s ease-in-out;

    position: relative;
    display: block;

    width: var(--robot-eye-width);
    aspect-ratio: 1;
    background: var(--robot-eye-background);
    border-radius: 50%;

    transition: var(--robot-eye-transition);

}

:is(.my-robot-eyes) .my-robot-eye::before {

    --robot-eye-before-transform: translateX(-50%, -50%);
    --robot-eye-before-width: 1rem;
    --robot-eye-before-background: #000000;
    --robot-eye-before-transition: all 1.5s ease-in-out;

    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    /* transform: var(--robot-eye-before-transform); */
    transform: translateX(-50%) translateY(-50%);

    width: var(--robot-eye-before-width);
    aspect-ratio: 1;
    background: var(--robot-eye-before-background);
    border-radius: 50%;

    transition: var(--robot-eye-before-transition);
    transition-delay: 0.2s;
    animation: movTheEye 15s linear infinite;
    animation-delay: 0.2s;

}

/* @keyframes movTheEye {

    0%,
    100% {
        transform: translateX(-50%) translateY(-50%);
    }

    20% {
        transform: translateX(-50%) translateY(0%);
    }

    40% {
        transform: translateX(-100%) translateY(-50%);
    }

    60% {
        transform: translateX(-50%) translateY(-100%);
    }

    80% {
        transform: translateX(0%) translateY(-50%);
    }
} */

:is(.my-robot-ears) {

    --robot-ears-gap: 8.8rem;

    position: absolute;

    display: flex;
    gap: var(--robot-ears-gap);

    transition: var(--robot-transition-for-all-parts);

}

:is(.my-robot-ear) {

    --robot-ear-width: 1.8rem;
    --robot-ear-height: 3rem;
    --robot-ear-background: var(--robot-background);
    --robot-ear-clip-path: polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);

    position: relative;

    width: var(--robot-ear-width);
    height: var(--robot-ear-height);
    background: var(--robot-ear-background);
    clip-path: var(--robot-ear-clip-path);

    transition: var(--robot-transition-for-all-parts);

}

:is(.my-robot-hands) {

    --robot-hands-transform: translate(-50%, -50%);
    --robot-hands-width: 21rem;
    --robot-hands-height: 1.8rem;
    --robot-hands-background: var(--robot-background);

    position: relative;
    top: -5.25rem;
    left: 50%;
    transform: var(--robot-hands-transform);

    width: var(--robot-hands-width);
    height: var(--robot-hands-height);
    background: var(--robot-hands-background);
    border-radius: 1rem;

    transition: var(--robot-transition-for-all-parts);

}

:is(.my-robot-hands)::before,
:is(.my-robot-hands)::after {

    --robot-hands-before-after-width: 13.5rem;
    --robot-hands-before-after-background: var(--robot-background);

    content: '';

    position: absolute;
    top: -5.60rem;

    width: var(--robot-hands-before-after-width);
    aspect-ratio: 1;
    background: var(--robot-hands-before-after-background);

    transition: var(--robot-transition-for-all-parts);
    z-index: -1;

}

:is(.my-robot-hands)::before {

    --robot-hands-before-clip-path: polygon(55% 25%, 75% 40%, 75% 56%, 55% 56%, 35% 56%, 35% 50%, 55% 50%, 55% 44%, 35% 44%, 35% 38%, 62% 38%, 50% 30%);

    left: -8.2rem;
    clip-path: var(--robot-hands-before-clip-path);

}

:is(.my-robot-hands)::after {

    --robot-hands-after-clip-path: polygon(45% 25%, 25% 40%, 25% 56%, 45% 56%, 65% 56%, 65% 50%, 45% 50%, 45% 44%, 65% 44%, 65% 38%, 38% 38%, 50% 30%);

    right: -8.2rem;
    clip-path: var(--robot-hands-after-clip-path);

}

:is(.my-robot-middle-of-hand),
:is(.my-robot-middle-of-hand)::before {

    position: absolute;
    transform: translate(-50%, -50%);

    width: 1.5rem;
    aspect-ratio: 1;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    border-radius: 0.25rem;

    transition: var(--robot-transition-for-all-parts);
    animation: givingPowerToMyRobot 5s linear infinite;

    /* opacity: 0;
    visibility: hidden; */

}

:is(.my-robot-middle-of-hand) {

    top: 0.72rem;
    left: 20.4rem;

}

:is(.my-robot-middle-of-hand)::before {

    content: '';

    top: 50%;
    right: 19.11rem;

}

:is(.my-robot-legs) {

    position: relative;
    transition: var(--robot-transition-for-all-parts);

}

:is(.my-robot-legs)::before,
:is(.my-robot-legs)::after {

    --robot-legs-before-after-width: 5.5rem;
    --robot-legs-before-after-background: var(--robot-background);
    --robot-legs-before-after-clip-path: ellipse(25% 40% at 50% 50%);

    content: '';

    position: absolute;
    top: 13.85rem;

    width: var(--robot-legs-before-after-width);
    aspect-ratio: 1;
    clip-path: var(--robot-legs-before-after-clip-path);
    background: var(--robot-legs-before-after-background);

    transition: var(--robot-transition-for-all-parts);
    z-index: 1;

}

:is(.my-robot-legs)::before {

    --robot-legs-before-transform: rotate(110deg);

    left: 3.69rem;
    transform: var(--robot-legs-before-transform);

}

:is(.my-robot-legs)::after {

    --robot-legs-after-transform: rotate(-110deg);

    right: 3.69rem;
    transform: var(--robot-legs-after-transform);

}

:is(.my-robot-shoes-heel),
:is(.my-robot-shoes-heel)::before {

    position: absolute;
    transform: translate(-50%, -50%);

    width: 1.15rem;
    aspect-ratio: 1;

    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    border-radius: 0.25rem;

    transition: var(--robot-transition-for-all-parts);
    animation: givingPowerToMyRobot 5s linear infinite;

    /* opacity: 0;
    visibility: hidden; */

    z-index: -1;

}

:is(.my-robot-shoes-heel) {

    top: 20.80rem;
    left: 13.25rem;

}

:is(.my-robot-shoes-heel)::before {

    content: '';

    top: 50%;
    right: 5rem;

}

/* Styles For .my-robot div And It's Children's */

/* XXX-XXX-XXX --- XXX-XXX-XXX */

/* Styles For .my-car div And It's Children's */

:is(.my-car) {

    --my-assistant-transition: all 1.5s ease-in-out;

    display: flex;
    flex-direction: column;

    transform: translateY(-14rem);
    transition: var(--my-assistant-transition);

}

:is(.my-car-body) {

    --my-assistant-body-transition: all 1.5s ease-in-out;

    position: relative;
    transition: var(--my-assistant-transition);

}

:is(.my-car-body)::before,
:is(.my-car-body)::after {

    --my-assistant-body-before-width: 41rem;
    --my-assistant-body-before-height: 50.71rem;
    --my-assistant-body-before-clip-path:
        polygon(16% 75%, 38.65% 75%, 44.35% 69%, 48.5% 64.55%, 64.75% 64.55%, 74.5% 75%, 95% 75%,
            100% 40%, 100% 68%, 100% 40%, 40% 32.6%, 16% 30%);

    --my-assistant-body-after-width: 34rem;
    --my-assistant-body-after-height: 76rem;
    --my-assistant-body-after-clip-path:
        polygon(12% 65%, 12% 65%, 28% 65%, 40% 58%, 60% 58%, 72% 65%, 100% 65%,
            100% 40%, 100% 68%, 100% 35%, 40% 40%, 0 43%);

    --my-assistant-body-before-after-background:
        linear-gradient(45deg, #0C0D0C, #0E0E0D);
    --my-assistant-body-before-after-transition: all 1.5s ease-in-out;

    content: '';

    position: absolute;

    background: var(--my-assistant-body-before-after-background);

    transition: var(--my-assistant-body-before-after-transition);

}

:is(.my-car-body)::before {

    top: -5.43rem;
    left: -7.56rem;

    width: var(--my-assistant-body-before-width);
    height: var(--my-assistant-body-before-height);
    clip-path: var(--my-assistant-body-before-clip-path);

}

:is(.my-car-body)::after {

    top: -16.8rem;
    right: 0.97rem;

    width: var(--my-assistant-body-after-width);
    height: var(--my-assistant-body-after-height);
    clip-path: var(--my-assistant-body-after-clip-path);

}

:is(.my-car-front-light) {

    position: absolute;
    top: 15.35rem;
    left: -32.85rem;
    transform: rotate(80.5deg);

    width: 4.5rem;
    height: 4.5rem;
    background-image: url(../assets/car-head-light.png);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;

    transition: all 1.5s ease-in-out;
    z-index: 1;

}

:is(.my-car-front-light)::before,
:is(.my-car-front-light)::after {
    content: "";
    position: absolute;
    left: 50%;
    width: 3rem;
    transform: translate(-50%, -50%);
    display: block;
    transition: all 1.5s ease-in-out;
}

:is(.my-car-front-light)::before {

    top: 0;

    height: 1.5rem;
    background: linear-gradient(45deg, #0C0D0C, #0E0E0D);

    cursor: pointer;
    pointer-events: all;

}

:is(.light-opened)::before {
    top: 50%;
    height: 6rem;
    transition: all 1.5s ease-in-out;
}

:is(.my-car-front-light)::after {

    top: 50%;

    height: 6rem;
    background: linear-gradient(45deg, #000000df, #000000df, #000000df);
    border: 2px solid #0E0E0D;

    z-index: -1;
    pointer-events: none;

}

:is(.my-car-front-indicator) {

    --my-assistant-power-width: 5.35rem;
    --my-assistant-power-height: 1.5rem;
    --my-assistant-power-background: rgb(255, 0, 0);
    --my-assistant-power-clip-path:
        polygon(50% 15%, 75% 25%, 100% 40%, 86% 70%, 80% 84%, 50% 85%, 20% 84%, 14% 70%, 0 40%, 25% 25%);
    --my-assistant-power-transform: translate(-50%, -50%) rotate(180deg);
    --my-assistant-power-transition: all 1.5s ease-in-out;

    position: absolute;
    top: 33rem;
    left: -28.15rem;
    transform: var(--my-assistant-power-transform);

    width: var(--my-assistant-power-width);
    height: var(--my-assistant-power-height);
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    border: 6px solid #0E0E0D;

    transition: var(--my-assistant-power-transition);
    animation: turningOnTheFrontIndicator 1s linear infinite;

    z-index: -1;
    cursor: pointer;

}

/* @keyframes turningOnTheFrontIndicator {
    50% {
        background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    }
} */

:is(.my-car-tires) {

    --my-assistant-face-transform: translate(-50%, -50%);
    --my-assistant-face-width: 10rem;
    --my-assistant-face-transition: all 1.5s ease-in-out;

    position: relative;
    top: 50%;
    left: 50%;
    transform: var(--my-assistant-face-transform);

    transition: var(--my-assistant-face-transition);
    z-index: 1;

}

:is(.my-car-tires):before,
:is(.my-car-tires):after {

    --my-assistant-face-before-transform: translateX(-50%);
    --my-assistant-face-before-width: 10rem;
    --my-assistant-face-before-background:
        linear-gradient(360deg, rgb(8, 8, 8) 0%, rgb(9, 9, 9) 5%, rgb(9, 9, 9) 100%);
    --my-assistant-face-before-transition: all 1.5s ease-in-out;

    content: "";

    position: absolute;
    top: 28rem;
    transform: var(--my-assistant-face-before-transform);

    width: var(--my-assistant-face-before-width);
    aspect-ratio: 1;
    background: var(--my-assistant-face-before-background);
    border-radius: 50%;

    transition: var(--my-assistant-face-before-transition);

}

:is(.my-car-tires):before {
    right: 8rem;
}

:is(.my-car-tires):after {
    left: 15.60rem;
}

:is(.my-car-inside-rims) {

    --my-assistant-eyes-gap: 27rem;
    --my-assistant-eyes-transition: all 1.5s ease-in-out;

    position: absolute;
    top: 28.90rem;
    left: 0;
    transform: translateX(-50%);

    display: flex;
    gap: var(--my-assistant-eyes-gap);

    transition: var(--my-assistant-eyes-transition);
    z-index: 2;

}

:is(.my-car-inside-rims) .my-car-inside-rim {

    --my-assistant-eye-width: 4rem;
    --my-assistant-eye-background:
        linear-gradient(0deg, rgb(125, 125, 125) 0%, rgb(125, 125, 125) 45%, rgb(125, 125, 125) 100%);
    --my-assistant-eye-clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 60% 100%, 40% 100%, 0% 70%, 0% 30%);
    --my-assistant-eye-transition: all 1.5s ease-in-out;

    position: relative;
    top: 2.10rem;
    transform: translateX(-50%);

    width: var(--my-assistant-eye-width);
    aspect-ratio: 1;
    background: var(--my-assistant-eye-background);
    clip-path: var(--my-assistant-eye-clip-path);

    transition: var(--my-assistant-eye-transition);

}

:is(.my-car-inside-rims) .my-car-inside-rim:nth-child(1) {
    left: -0.5rem;
}

:is(.my-car-inside-rims) .my-car-inside-rim:nth-child(2) {
    left: 2.10rem;
}

:is(.my-car-inside-rims) .my-car-inside-rim::before {

    --my-assistant-eye-before-transform: translateX(-50%) translateY(-50%);
    --my-assistant-eye-before-width: 2rem;
    --my-assistant-eye-before-background:
        linear-gradient(0deg, rgb(10, 10, 10) 0%, rgb(10, 10, 10) 45%, rgb(10, 10, 10) 100%);
    --my-assistant-eye-before-clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 50% 100%, 50% 100%, 0% 70%, 0% 30%);
    --my-assistant-eye-before-transition: all 1.5s ease-in-out;

    content: "";

    position: absolute;
    top: 50%;
    left: 50%;
    transform: var(--my-assistant-eye-before-transform);

    width: var(--my-assistant-eye-before-width);
    aspect-ratio: 1;
    background: var(--my-assistant-eye-before-background);
    clip-path: var(--my-assistant-eye-before-clip-path);

    transition: var(--my-assistant-eye-before-transition);

}

:is(.my-car-outside-rims) {

    --my-assistant-ears-gap: 8.8rem;
    --my-assistant-ears-transform: translate(-50%, -50%);
    --my-assistant-ears-transition: all 1.5s ease-in-out;

    display: flex;
    gap: var(--my-assistant-ears-gap);

    position: absolute;
    top: 32.85rem;
    transform: var(--my-assistant-ears-transform);

    transition: var(--my-assistant-ears-transition);
    z-index: 1;

}

:is(.my-car-outside-rim) {

    --my-assistant-ear-width: 6.5rem;
    --my-assistant-ear-background:
        linear-gradient(0deg, rgb(225, 225, 225) 50%, rgb(0, 0, 0) 50%, rgb(0, 0, 0) 100%);
    --my-assistant-ear-clip-path:
        polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
    --my-assistant-ear-transition: all 1.5s ease-in-out;

    position: relative;

    width: var(--my-assistant-ear-width);
    aspect-ratio: 1;
    background: var(--my-assistant-ear-background);
    clip-path: var(--my-assistant-ear-clip-path);

    transition: var(--my-assistant-ear-transition);

}

:is(.my-car-outside-rim):nth-child(1) {
    right: 10.35rem;
}

:is(.my-car-outside-rim):nth-child(2) {
    left: 7.95rem;
}

:is(.my-car-interior) {

    display: flex;
    /* flex-direction: column; */
    align-items: center;
    justify-content: center;

    position: absolute;
    top: 22.5rem;
    left: -1.2rem;
    transform: translate(-50%, -50%);

    width: 40.25rem;
    height: 26rem;

    background: linear-gradient(45deg, #050605, #050605, #050605);

    clip-path:
        polygon(0 19.35%, 0 84%, 0 66%, 18% 66%, 27.5% 85%, 50% 85%, 72.5% 85%, 82% 66%,
            100% 66%, 100% 85%, 100% 15.35%, 50.75% 4.5%);

    transition: all 2s ease-in-out;
    z-index: 1;

}

:is(.my-car-seat) {

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -65%);

    width: 50rem;
    height: 30rem;

    /* background-image: url(../assets/car-interior.png);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat; */

    transition: all 1.5s ease-in-out;
    z-index: -2;

}

:is(.my-car-door) {

    position: relative;

    width: 100%;
    height: 100%;

    transition: all 1.7s ease-in-out;

}

:is(.my-car-door)::before,
:is(.my-car-door)::after {

    content: '';

    position: absolute;
    bottom: 0;
    transform-style: preserve-3d;
    perspective: 100em;

    width: 100%;
    height: 61%;
    background: linear-gradient(45deg, #0E0E0D, #0E0E0D, #0E0E0D);

    transition: all 1.8s ease-in-out;
    transition-delay: 0.5s;
    z-index: 1;

}

:is(.my-car-door)::before {
    right: 0;
    transform-origin: left;
    clip-path:
        polygon(0 0%, 0 66%, 0 66%, 12% 66%, 25% 85%, 50% 85%, 50% 85%,
            50% 85%, 50% 85%, 50% 85%, 50% 85%, 50% 0%);
}

:is(.open-the-left-door)::before {
    transform: perspective(100em) translate(0px) rotateY(-105deg);
    transition: transform 1.6s ease-in-out;
    transition-delay: 0.3s;
}

:is(.my-car-door)::after {
    left: 0;
    transform-origin: right;
    clip-path:
        polygon(50% 85%, 50% 85%, 50% 85%, 50% 85%, 50% 85%, 50% 85%, 75% 85%,
            88% 66%, 100% 66%, 100% 85%, 100% 0%, 50% 0%);
}

:is(.open-the-right-door)::after {
    transform: perspective(100em) translate(0px) rotateY(105deg);
    transition: transform 1.6s ease-in-out;
    transition-delay: 0.3s;
}

:is(.my-car-door-handle) {
    position: absolute;
    top: 14.5rem;
    left: 35.5rem;
    transform: translate(-50%, -50%);
    width: 8rem;
    aspect-ratio: 1;
    background-image: url(../assets/car-door-handle.png);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    transition: all 1.5s ease-in-out;
    z-index: 2;
}

:is(.my-car-door-window) {

    position: absolute;
    left: 50%;
    transform: translateX(-50%);

    width: 100%;
    height: 100%;

    transition: all 1.7s ease-in-out;
    z-index: 2;

}

:is(.my-car-door-window)::before,
:is(.my-car-door-window)::after {

    content: '';

    position: absolute;
    top: 1rem;

    width: 100%;
    height: 42%;
    /* background: linear-gradient(45deg, #0E0E0D, #0E0E0D, #0E0E0D); */
    background: linear-gradient(45deg, #050605, #050605, #050605);

    transition: all 1.8s ease-in-out;
    transition-delay: 0.5s;

}

:is(.my-car-door-window)::before {
    right: 0;
    transform-origin: left;
    clip-path:
        polygon(0 0%, 0 66%, 0 66%, 0% 85%, 25% 85%, 50% 85%, 50% 85%,
            50% 85%, 50% 85%, 50% 85%, 50% 85%, 51% 0%);
}

:is(.my-car-door-window)::after {
    left: 0;
    transform-origin: right;
    clip-path:
        polygon(50% 85%, 50% 85%, 50% 5%, 50% 85%, 50% 85%, 50% 85%, 75% 85%,
            100% 85%, 100% 66%, 100% 85%, 100% 0%, 51% 0%);
}

:is(.window-opened)::after {
    width: 0;
    transition: width 1.6s ease-in-out;
}

:is(.window-closed)::after {
    width: 100%;
    transition: width 1.6s ease-in-out;
    transition-delay: 0.3s;
}

:is(.left-window-opened)::before {
    transform: perspective(100em) translate(0px) rotateY(-105deg);
    transition: transform 1.6s ease-in-out;
    transition-delay: 0.3s;
}

:is(.right-window-opened)::after {
    transform: perspective(100em) translate(0px) rotateY(105deg);
    transition: transform 1.6s ease-in-out;
    transition-delay: 0.3s;
}

:is(.window-lines) {

    position: absolute;
    top: 22.2%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 105%;
    height: 9rem;
    background: linear-gradient(45deg, #000000, #000000, #000000);
    clip-path:
        polygon(0 48%, 50.2% 5%, 50.2% 100%, 51.5% 100%, 51.5% 5%, 100% 35%, 100% 35%,
            100% 35%, 100% 35%, 100% 35%, 100% 35%, 50.7% 0%);

    z-index: 1;

}

:is(.window-lines-expand) {
    opacity: 1;
    transition: opacity 5s ease-in-out;
    transition-delay: 1.2s;
}

:is(.window-lines-collapsed) {
    opacity: 0;
    transition: opacity 0.9s ease-in-out;
}

:is(.my-car-window-lock) {

    position: absolute;
    top: 27%;
    left: 95%;
    transform: translate(-50%, -50%);

    width: 2rem;
    aspect-ratio: 1;
    background: linear-gradient(45deg, #050605, #050605, #050605);
    border-radius: 0.25rem;
    border: 2px solid #121212df;

    transition: all 2s ease-in-out;
    transition-delay: 0.1s;

    animation: givingPowerToMyCar 1s linear infinite;

    z-index: 1;
    cursor: pointer;

}

:is(.my-car-indicator) {

    position: absolute;
    top: 20.7rem;
    right: 20rem;
    transform: translate(-50%, -50%);

    width: 5rem;
    height: 8rem;
    /* background: linear-gradient(45deg, #1F201F, #373736, #464747); */
    /* background-image: url(../assets/car-indicator.png); */
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;

    border-radius: 0.5rem;
    /* box-shadow: inset 0 0 0.5rem #000000; */

    transition: all 0.7s ease-in-out;

    transition: all 0.7s ease-in-out;
    z-index: 9999;

    cursor: pointer;

}

:is(.my-car-indicator-light) {

    position: relative;
    top: 2rem;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 20rem;
    aspect-ratio: 1;
    /* background: linear-gradient(45deg, #1F201F, #373736, #464747); */
    background-image: url(../assets/car-indicator-1.png);
    background-size: contain;
    /* background-position: center; */
    background-repeat: no-repeat;

    transition: all 0.7s ease-in-out;
    cursor: pointer;

}

:is(.my-car-gas-cap) {

    position: absolute;
    top: 23rem;
    left: 25.5rem;
    transform: translate(-50%, -50%);

    width: 4rem;
    aspect-ratio: 1;

    background: linear-gradient(45deg, #050605, #050605, #050605);
    border-radius: 0.25rem;

    transition: all 1.5s ease-in-out;
    cursor: pointer;
    pointer-events: none;

}

:is(.my-car-gas-cap)::before {

    content: '';

    display: block;
    position: relative;
    transform-origin: left;
    perspective: 100em;

    width: 100%;
    height: 100%;

    background: linear-gradient(45deg, #0C0D0C, #0E0E0D);
    /* background: linear-gradient(45deg, #121212df, #121212df, #121212df); */
    /* box-shadow: 
        inset 0 0 .1rem rgb(09, 09, 09), 
        inset 0 0 .1rem rgb(09, 09, 09), 
        inset 0 0 .1rem rgb(09, 09, 09); */
    border-radius: 0.25rem;

    transition: all 1.5s ease-in-out;
    cursor: pointer;
    pointer-events: all;

}

:is(.cap-opened)::before {
    transform: perspective(100em) translate(0px) rotateY(-105deg);
    transition: transform 1.5s ease-in-out;
    transition-delay: 0.1s;
}

:is(.my-car-gas-cap)::after {

    content: '';

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 3.2rem;
    aspect-ratio: 1;

    background-image: url(../assets/car-gas-cap.png);
    background-size: 5rem;
    background-position: center;
    background-repeat: no-repeat;

    transition: all 1.5s ease-in-out;
    pointer-events: none;
    z-index: -1;

}

:is(.my-car-silencer-1),
:is(.my-car-silencer-2) {
    position: absolute;
    left: 29.5rem;
    transform: translate(-50%, -50%);
    background-image: url(../assets/car-exhaust-pipe.png);
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    width: 10rem;
    aspect-ratio: 1;
    z-index: -1;
    transition: all 1.5s ease-in-out;
}

:is(.my-car-silencer-1) {
    top: 27.25rem;
}

:is(.my-car-silencer-2) {
    top: 29.5rem;
}

/* Styles For .my-car div And It's Children's */

:is(.my-assistant-transform-button) {

    --my-assistant-transform-button-transform: translate(-50%, -50%);
    --my-assistant-transform-button-transition: all 1.5s ease-in-out;

    position: absolute;
    top: 100rem;
    left: 10rem;
    transform: var(--my-assistant-transform-button-transform);

    transition: var(--my-assistant-transform-button-transition);
    cursor: pointer;

}

:is(.my-assistant-transform-button) img {

    --my-assistant-transform-button-img-width: 5rem;
    --my-assistant-transform-button-img-height: 2rem;
    --my-assistant-transform-button-img-transition: width 1.5s ease-in-out, height 1.5s ease-in-out;

    width: var(--my-assistant-transform-button-img-width);
    height: var(--my-assistant-transform-button-img-height);

    transition: var(--my-assistant-transform-button-img-transition);

}

/* XXX-XXX-XXX --- XXX-XXX-XXX */

:is(.entrance-of-about-me) {

    position: relative;

    width: 100%;
    height: 100%;

    transition: all 1.5s ease-in-out;

}

:is(.entrance-of-about-me)::before {

    --television-before-font-color: #373736;
    --television-before-font-size: 3.5rem;
    --television-before-text-shadow: 1px 1px 1px #464747,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F,
        -.1rem -.1rem .1rem #1F201F;
    --television-before-transition: all 1.5s ease-in-out;
    --television-before-transition-delay: 0.3s;

    content: '< PLEASE WAIT ... />';

    position: absolute;
    top: 20rem;
    left: 50%;
    transform: translate(-50%, -50%);

    color: var(--television-before-font-color);
    font-size: var(--television-before-font-size);
    font-weight: 800;
    letter-spacing: 0.2rem;
    text-shadow: var(--television-before-text-shadow);
    white-space: nowrap;

    transition: var(--television-before-transition);
    transition-delay: var(--television-before-transition-delay);

    z-index: 1;

    opacity: 0;
    visibility: hidden;

}

:is(.please-wait)::before {
    animation: displayingPleaseWaitText 6s ease-in-out alternate;
    animation-delay: 8.5s;
}

@keyframes displayingPleaseWaitText {

    0%,
    100% {
        opacity: 0;
        visibility: hidden;
    }

    50% {
        opacity: 1;
        visibility: visible;
    }
}

:is(.entrance-of-about-me)::after {

    content: '';

    position: absolute;
    top: 0;
    transform: perspective(100em) translate(0px) rotateY(0deg);
    transform-origin: right;
    perspective: 100em;
    transform-style: preserve-3d;

    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom right, rgb(2.5, 2.5, 2.5), rgb(2.5, 2.5, 2.5));
    clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);

    transition: transform 1.5s ease-in-out;

}

:is(.cleared)::after {
    transform: perspective(100em) translate(0px) rotateY(-105deg);
    transition: transform 1.5s ease-in-out;
    transition-delay: 15s;
}

:is(.not-cleared)::after {
    transform: perspective(100em) translate(0px) rotateY(105deg);
    transition: transform 1.5s ease-in-out;
    transition-delay: 1.5s;
}

:is(.keys-of-about-me) {

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.1rem;
    flex-wrap: wrap;

    position: absolute;
    top: 40%;
    /* top: 270.5%; */
    right: 1rem;
    transform: translate(-50%, -50%);

    width: 3rem;
    aspect-ratio: 1;
    padding: 0.5rem;
    background: rgb(8, 8, 8);
    box-shadow:
        .1rem .1rem .1rem rgb(4, 247, 85),
        .1rem .1rem .1rem rgb(4, 247, 85),
        .1rem .1rem .1rem rgb(4, 247, 85),
        .1rem .1rem .1rem rgb(4, 247, 85),
        .1rem .1rem .1rem rgb(4, 247, 85);
    border-radius: 0.5rem;

    transition: all 1.5s ease-in-out;
    z-index: 1;

}

:is(.hidden) {
    opacity: 0;
    visibility: hidden;
    transition: all 0.5s ease-in-out;
    pointer-events: none;
}

:is(.visible) {
    opacity: 1;
    visibility: visible;
    transition: all 1.5s ease-in-out;
    transition-delay: 16.3s;
    cursor: pointer;
    pointer-events: all;
}

:is(.key-of-about-me) {
    position: relative;
    width: 0.5rem;
    aspect-ratio: 1;
    border-radius: 1rem;
    transition: all 0.7s ease-in-out;
}

:is(.failed) {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transition: background 0.7s ease-in-out;
}

:is(.success) {
    background: linear-gradient(to bottom right, rgb(255, 255, 255), rgb(255, 255, 255));
    transition: background 0.7s ease-in-out;
}

:is(.scene),
:is(.scene) * {
    transform-style: preserve-3d;
}

:is(.scene) {
    position: absolute;
    top: 15rem;
    left: 35%;
    width: 70vmin;
    height: 20vmin;
    transform: rotateX(-20deg) rotateY(80deg) scale3d(1, 1, 1);
    z-index: 1;
}

@keyframes rot {
    to {
        transform: rotateX(0deg) rotateY(440deg) scale3d(1, 1, 1);
    }
}

:is(.vanished) {
    animation: rot 20s ease-in-out 0.5s infinite alternate, stopRotation 7s ease-in-out 0.5s forwards;
}

@keyframes stopRotation {
    100% {
        transform: rotateX(0deg) rotateY(440deg) scale3d(0, 0, 0);
    }
}

@keyframes Vanishing {

    0%,
    100% {
        transform: rotateX(-20deg) rotateY(80deg) scale3d(1, 1, 1);
    }

    50% {
        transform: rotateX(-20deg) rotateY(80deg) scale3d(0, 0, 0);
    }
}

:is(.returned) {
    animation: rot 20s ease-in-out 0.5s infinite alternate, returned 2s ease-out 1s backwards;
}

@keyframes returned {
    0% {
        transform: rotateX(0deg) rotateY(440deg) scale3d(0, 0, 0);
    }
}

:is(.scene)::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    z-index: -100;
    transform: rotateX(90deg) scale(1);
}

:is(.scene) .cube,
:is(.scene) .cube * {
    position: absolute;
    bottom: 0;
}

:is(.scene) #ground {
    z-index: -50;
    width: 70vmin;
    height: 3vmin;
}

:is(.scene) #ground .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.scene) #ground .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.scene) #ground .container .left {
    width: 70vmin;
    height: 3vmin;
    background: linear-gradient(360deg, rgb(4, 4, 4) 0%, rgb(4.5, 4.5, 4.5) 5%, rgb(4.5, 4.5, 4.5) 100%);
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-35vmin);
}

:is(.scene) #ground .container .right {
    width: 70vmin;
    height: 3vmin;
    background: linear-gradient(360deg, rgb(4, 4, 4) 0%, rgb(4.5, 4.5, 4.5) 5%, rgb(4.5, 4.5, 4.5) 100%);
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-35vmin) translateZ(70vmin);
}

:is(.scene) #ground .container .top {
    background: linear-gradient(360deg, rgb(8, 8, 8) 0%, rgb(9, 9, 9) 5%, rgb(9, 9, 9) 100%);
    ;
    width: 70vmin;
    height: 70vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(35vmin) translateZ(3vmin);
}

:is(.scene) #ground .container .bottom {
    background: linear-gradient(360deg, rgb(8, 8, 8) 0%, rgb(9, 9, 9) 5%, rgb(9, 9, 9) 100%);
    ;
    width: 70vmin;
    height: 70vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(35vmin);
}

:is(.scene) #ground .container .front {
    background: linear-gradient(360deg, rgb(4, 4, 4) 0%, rgb(4.5, 4.5, 4.5) 5%, rgb(4.5, 4.5, 4.5) 100%);
    width: 70vmin;
    height: 3vmin;
    transform-origin: bottom left;
    transform: translateZ(35vmin);
}

:is(.scene) #ground .container .back {
    background: linear-gradient(360deg, rgb(4, 4, 4) 0%, rgb(4.5, 4.5, 4.5) 5%, rgb(4.5, 4.5, 4.5) 100%);
    width: 70vmin;
    height: 3vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(35vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.scene) #ground .container .left,
:is(.scene) #ground .container .right,
:is(.scene) #ground .container .front,
:is(.scene) #ground .container .back {
    background-image: linear-gradient(180deg, #000 0 0% 20%, #000 20% 45%, #000 0 45% 100%);
}

/* :is(.scene) #ground .container .bottom {
    background-color: #e1b366;
    filter: drop-shadow(0 0 3.75rem black);
} */

:is(.scene) #ground .container .top {
    box-shadow: inset 0 0 15vmin #000;
    background-image: radial-gradient(#000 8, #000 0 15vmin),
        repeating-linear-gradient(180deg, #000 0 0% 50%, #000 1 50% 100%),
        repeating-linear-gradient(90deg, #000 0 0% 50%, #000 1 50% 100%);
    background-size: 100%, 4em 4em, 4em 4em;
}

:is(.scene) .rocks {
    position: absolute;
    width: 100%;
    height: 100%;
    bottom: 0;
    transform: translateY(-3vmin);
}

:is(.scene) .rocks #rock-1 {
    width: 6vmin;
    height: 5vmin;
    transform: translate3d(5vmin, 2vmin, 25vmin) rotateX(15deg) rotateY(15deg);
}

:is(.scene) .rocks #rock-1 .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.scene) .rocks #rock-1 .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.scene) .rocks #rock-1 .container .left {
    width: 5vmin;
    height: 5vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-2.5vmin);
}

:is(.scene) .rocks #rock-1 .container .right {
    width: 5vmin;
    height: 5vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-2.5vmin) translateZ(6vmin);
}

:is(.scene) .rocks #rock-1 .container .top {
    background-color: #4a4a4a;
    width: 6vmin;
    height: 5vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(2.5vmin) translateZ(5vmin);
}

:is(.scene) .rocks #rock-1 .container .bottom {
    background-color: #4a4a4a;
    width: 6vmin;
    height: 5vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(2.5vmin);
}

:is(.scene) .rocks #rock-1 .container .front {
    background-color: #292929;
    width: 6vmin;
    height: 5vmin;
    transform-origin: bottom left;
    transform: translateZ(2.5vmin);
}

:is(.scene) .rocks #rock-1 .container .back {
    background-color: #292929;
    width: 6vmin;
    height: 5vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(2.5vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.scene) .rocks #rock-2 {
    width: 8vmin;
    height: 4vmin;
    transform: translate3d(15vmin, 1.5vmin, -25vmin) rotateX(-15deg) rotateY(20deg);
}

:is(.scene) .rocks #rock-2 .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.scene) .rocks #rock-2 .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.scene) .rocks #rock-2 .container .left {
    width: 8vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-4vmin);
}

:is(.scene) .rocks #rock-2 .container .right {
    width: 8vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-4vmin) translateZ(8vmin);
}

:is(.scene) .rocks #rock-2 .container .top {
    background-color: #4a4a4a;
    width: 8vmin;
    height: 8vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(4vmin) translateZ(4vmin);
}

:is(.scene) .rocks #rock-2 .container .bottom {
    background-color: #4a4a4a;
    width: 8vmin;
    height: 8vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(4vmin);
}

:is(.scene) .rocks #rock-2 .container .front {
    background-color: #292929;
    width: 8vmin;
    height: 4vmin;
    transform-origin: bottom left;
    transform: translateZ(4vmin);
}

:is(.scene) .rocks #rock-2 .container .back {
    background-color: #292929;
    width: 8vmin;
    height: 4vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(4vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.scene) .rocks #rock-3 {
    width: 9vmin;
    height: 4vmin;
    transform: translate3d(15vmin, 2vmin, -25vmin) rotateX(5deg) rotateY(-15deg) rotateZ(3deg);
}

:is(.scene) .rocks #rock-3 .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.scene) .rocks #rock-3 .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.scene) .rocks #rock-3 .container .left {
    width: 8vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-4vmin);
}

:is(.scene) .rocks #rock-3 .container .right {
    width: 8vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-4vmin) translateZ(9vmin);
}

:is(.scene) .rocks #rock-3 .container .top {
    background-color: #4a4a4a;
    width: 9vmin;
    height: 8vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(4vmin) translateZ(4vmin);
}

:is(.scene) .rocks #rock-3 .container .bottom {
    background-color: #4a4a4a;
    width: 9vmin;
    height: 8vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(4vmin);
}

:is(.scene) .rocks #rock-3 .container .front {
    background-color: #292929;
    width: 9vmin;
    height: 4vmin;
    transform-origin: bottom left;
    transform: translateZ(4vmin);
}

:is(.scene) .rocks #rock-3 .container .back {
    background-color: #292929;
    width: 9vmin;
    height: 4vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(4vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.scene) .rocks #rock-4 {
    width: 9vmin;
    height: 4vmin;
    transform: translate3d(45vmin, 1.5vmin, 18vmin) rotateX(15deg) rotateY(45deg);
}

:is(.scene) .rocks #rock-4 .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.scene) .rocks #rock-4 .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.scene) .rocks #rock-4 .container .left {
    width: 8vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-4vmin);
}

:is(.scene) .rocks #rock-4 .container .right {
    width: 8vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-4vmin) translateZ(9vmin);
}

:is(.scene) .rocks #rock-4 .container .top {
    background-color: #4a4a4a;
    width: 9vmin;
    height: 8vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(4vmin) translateZ(4vmin);
}

:is(.scene) .rocks #rock-4 .container .bottom {
    background-color: #4a4a4a;
    width: 9vmin;
    height: 8vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(4vmin);
}

:is(.scene) .rocks #rock-4 .container .front {
    background-color: #292929;
    width: 9vmin;
    height: 4vmin;
    transform-origin: bottom left;
    transform: translateZ(4vmin);
}

:is(.scene) .rocks #rock-4 .container .back {
    background-color: #292929;
    width: 9vmin;
    height: 4vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(4vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.scene) .rocks #rock-5 {
    width: 12vmin;
    height: 4vmin;
    transform: translate3d(47vmin, 1.5vmin, -22vmin) rotateX(-5deg) rotateY(65deg);
}

:is(.scene) .rocks #rock-5 .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.scene) .rocks #rock-5 .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.scene) .rocks #rock-5 .container .left {
    width: 14vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-7vmin);
}

:is(.scene) .rocks #rock-5 .container .right {
    width: 14vmin;
    height: 4vmin;
    background-color: #3d3d3d;
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-7vmin) translateZ(12vmin);
}

:is(.scene) .rocks #rock-5 .container .top {
    background-color: #4a4a4a;
    width: 12vmin;
    height: 14vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(7vmin) translateZ(4vmin);
}

:is(.scene) .rocks #rock-5 .container .bottom {
    background-color: #4a4a4a;
    width: 12vmin;
    height: 14vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(7vmin);
}

:is(.scene) .rocks #rock-5 .container .front {
    background-color: #292929;
    width: 12vmin;
    height: 4vmin;
    transform-origin: bottom left;
    transform: translateZ(7vmin);
}

:is(.scene) .rocks #rock-5 .container .back {
    background-color: #292929;
    width: 12vmin;
    height: 4vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(7vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) {
    position: absolute;
    width: 100%;
    height: 100%;
    bottom: 0;
    transform: translate3d(30vmin, 0, 0);
}

:is(.jedi) .body,
:is(.jedi) .head,
:is(.jedi) .light-saber,
:is(.jedi) .hair,
:is(.jedi) .eyes,
:is(.jedi) .legs,
:is(.jedi) .leg-left,
:is(.jedi) .leg-right,
:is(.jedi) .arms,
:is(.jedi) .arm-left,
:is(.jedi) .arm-right,
:is(.jedi) .elbow-left {
    position: absolute;
    width: 100%;
    height: 100%;
    bottom: 0;
}

:is(.jedi) .head {
    width: 10vmin;
    height: 8vmin;
    transform: translate3d(0vmin, -23vmin, 0);
    animation: rotHead 10s ease-in-out infinite alternate;
}

@keyframes rotHead {

    20%,
    25% {
        transform: translate3d(0vmin, -23vmin, 0) rotateY(20deg) rotateZ(5deg);
    }

    50%,
    55% {
        transform: translate3d(0vmin, -23vmin, 0) rotateY(-20deg) rotateZ(-5deg);
    }

    70%,
    75% {
        transform: translate3d(0vmin, -23vmin, 0) rotateY(15deg) rotateZ(5deg);
    }

    100% {
        transform: translate3d(0vmin, -23vmin, 0) rotateY(-10deg) rotateZ(5deg);
    }
}

:is(.jedi) .head #head {
    width: 10vmin;
    height: 7vmin;
}

:is(.jedi) .head #head .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head #head .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head #head .container .left {
    width: 10vmin;
    height: 7vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-5vmin);
}

:is(.jedi) .head #head .container .right {
    width: 10vmin;
    height: 7vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-5vmin) translateZ(10vmin);
}

:is(.jedi) .head #head .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 10vmin;
    height: 10vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(5vmin) translateZ(7vmin);
}

:is(.jedi) .head #head .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 10vmin;
    height: 10vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(5vmin);
}

:is(.jedi) .head #head .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 10vmin;
    height: 7vmin;
    transform-origin: bottom left;
    transform: translateZ(5vmin);
}

:is(.jedi) .head #head .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 10vmin;
    height: 7vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(5vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head #neck {
    width: 4vmin;
    height: 2vmin;
    transform: translate3d(3vmin, 1.5vmin, 0);
}

:is(.jedi) .head #neck .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head #neck .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head #neck .container .left {
    width: 4vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-2vmin);
}

:is(.jedi) .head #neck .container .right {
    width: 4vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-2vmin) translateZ(4vmin);
}

:is(.jedi) .head #neck .container .top {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 4vmin;
    height: 4vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(2vmin) translateZ(2vmin);
}

:is(.jedi) .head #neck .container .bottom {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 4vmin;
    height: 4vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(2vmin);
}

:is(.jedi) .head #neck .container .front {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 4vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: translateZ(2vmin);
}

:is(.jedi) .head #neck .container .back {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 4vmin;
    height: 2vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(2vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head #nose {
    width: 2vmin;
    height: 2vmin;
    transform: translate3d(-1.5vmin, -1.5vmin, 0);
}

:is(.jedi) .head #nose .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head #nose .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head #nose .container .left {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .head #nose .container .right {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .head #nose .container .top {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(2vmin);
}

:is(.jedi) .head #nose .container .bottom {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .head #nose .container .front {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .head #nose .container .back {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 2vmin;
    height: 2vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head .eyes #eye-left {
    width: 1.5vmin;
    height: 1.75vmin;
    transform: translate3d(-0.3vmin, -3vmin, 4.25vmin);
}

:is(.jedi) .head .eyes #eye-left .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head .eyes #eye-left .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head .eyes #eye-left .container .left {
    width: 1.75vmin;
    height: 1.75vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-0.875vmin);
}

:is(.jedi) .head .eyes #eye-left .container .right {
    width: 1.75vmin;
    height: 1.75vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-0.875vmin) translateZ(1.5vmin);
}

:is(.jedi) .head .eyes #eye-left .container .top {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(0.875vmin) translateZ(1.75vmin);
}

:is(.jedi) .head .eyes #eye-left .container .bottom {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(0.875vmin);
}

:is(.jedi) .head .eyes #eye-left .container .front {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: bottom left;
    transform: translateZ(0.875vmin);
}

:is(.jedi) .head .eyes #eye-left .container .back {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(0.875vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head .eyes #eye-right {
    width: 1.5vmin;
    height: 1.75vmin;
    transform: translate3d(-0.3vmin, -3vmin, -4.25vmin);
}

:is(.jedi) .head .eyes #eye-right .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head .eyes #eye-right .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head .eyes #eye-right .container .left {
    width: 1.75vmin;
    height: 1.75vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-0.875vmin);
}

:is(.jedi) .head .eyes #eye-right .container .right {
    width: 1.75vmin;
    height: 1.75vmin;
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-0.875vmin) translateZ(1.5vmin);
}

:is(.jedi) .head .eyes #eye-right .container .top {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(0.875vmin) translateZ(1.75vmin);
}

:is(.jedi) .head .eyes #eye-right .container .bottom {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(0.875vmin);
}

:is(.jedi) .head .eyes #eye-right .container .front {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: bottom left;
    transform: translateZ(0.875vmin);
}

:is(.jedi) .head .eyes #eye-right .container .back {
    background: linear-gradient(to bottom right, rgb(25, 25, 25), rgb(12.5, 12.5, 12.5));
    width: 1.5vmin;
    height: 1.75vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(0.875vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head .hair {
    transform: translate3d(-0.5vmin, -7vmin, 0vmin);
}

:is(.jedi) .head .hair #hair-top {
    width: 11vmin;
    height: 2vmin;
}

:is(.jedi) .head .hair #hair-top .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head .hair #hair-top .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head .hair #hair-top .container .left {
    width: 11vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-5.5vmin);
}

:is(.jedi) .head .hair #hair-top .container .right {
    width: 11vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-5.5vmin) translateZ(11vmin);
}

:is(.jedi) .head .hair #hair-top .container .top {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 11vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(5.5vmin) translateZ(2vmin);
}

:is(.jedi) .head .hair #hair-top .container .bottom {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 11vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(5.5vmin);
}

:is(.jedi) .head .hair #hair-top .container .front {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 11vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: translateZ(5.5vmin);
}

:is(.jedi) .head .hair #hair-top .container .back {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 11vmin;
    height: 2vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(5.5vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head .hair #hair-center {
    width: 2vmin;
    height: 3.1vmin;
    transform: translate3d(4vmin, 3vmin, 0);
}

:is(.jedi) .head .hair #hair-center .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head .hair #hair-center .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head .hair #hair-center .container .left {
    width: 11vmin;
    height: 3.1vmin;
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-5.5vmin);
}

:is(.jedi) .head .hair #hair-center .container .right {
    width: 11vmin;
    height: 3.1vmin;
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-5.5vmin) translateZ(2vmin);
}

:is(.jedi) .head .hair #hair-center .container .top {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(5.5vmin) translateZ(3.1vmin);
}

:is(.jedi) .head .hair #hair-center .container .bottom {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(5.5vmin);
}

:is(.jedi) .head .hair #hair-center .container .front {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 3.1vmin;
    transform-origin: bottom left;
    transform: translateZ(5.5vmin);
}

:is(.jedi) .head .hair #hair-center .container .back {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 3.1vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(5.5vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head .hair #hair-center-back {
    width: 2vmin;
    height: 2.1vmin;
    transform: translate3d(6vmin, 2vmin, 0);
}

:is(.jedi) .head .hair #hair-center-back .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head .hair #hair-center-back .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head .hair #hair-center-back .container .left {
    width: 11vmin;
    height: 2.1vmin;
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-5.5vmin);
}

:is(.jedi) .head .hair #hair-center-back .container .right {
    width: 11vmin;
    height: 2.1vmin;
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-5.5vmin) translateZ(2vmin);
}

:is(.jedi) .head .hair #hair-center-back .container .top {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(5.5vmin) translateZ(2.1vmin);
}

:is(.jedi) .head .hair #hair-center-back .container .bottom {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(5.5vmin);
}

:is(.jedi) .head .hair #hair-center-back .container .front {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 2.1vmin;
    transform-origin: bottom left;
    transform: translateZ(5.5vmin);
}

:is(.jedi) .head .hair #hair-center-back .container .back {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 2vmin;
    height: 2.1vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(5.5vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .head .hair #hair-back {
    width: 3vmin;
    height: 5.1vmin;
    transform: translate3d(8vmin, 5vmin, 0);
}

:is(.jedi) .head .hair #hair-back .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .head .hair #hair-back .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .head .hair #hair-back .container .left {
    width: 11vmin;
    height: 5.1vmin;
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-5.5vmin);
}

:is(.jedi) .head .hair #hair-back .container .right {
    width: 11vmin;
    height: 5.1vmin;
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-5.5vmin) translateZ(3vmin);
}

:is(.jedi) .head .hair #hair-back .container .top {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 3vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(5.5vmin) translateZ(5.1vmin);
}

:is(.jedi) .head .hair #hair-back .container .bottom {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 3vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(5.5vmin);
}

:is(.jedi) .head .hair #hair-back .container .front {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 3vmin;
    height: 5.1vmin;
    transform-origin: bottom left;
    transform: translateZ(5.5vmin);
}

:is(.jedi) .head .hair #hair-back .container .back {
    background: linear-gradient(to bottom right, rgb(17.5, 17.5, 17.5), rgb(7.5, 7.5, 7.5));
    width: 3vmin;
    height: 5.1vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(5.5vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .body {
    width: 9vmin;
    height: 10vmin;
    transform: translate3d(0.5vmin, -12vmin, 0);
}

:is(.jedi) .body #body {
    width: 9vmin;
    height: 10vmin;
}

:is(.jedi) .body #body .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .body #body .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .body #body .container .left {
    width: 10vmin;
    height: 10vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-5vmin);
}

:is(.jedi) .body #body .container .right {
    width: 10vmin;
    height: 10vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-5vmin) translateZ(9vmin);
}

:is(.jedi) .body #body .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 9vmin;
    height: 10vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(5vmin) translateZ(10vmin);
}

:is(.jedi) .body #body .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 9vmin;
    height: 10vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(5vmin);
}

:is(.jedi) .body #body .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 9vmin;
    height: 10vmin;
    transform-origin: bottom left;
    transform: translateZ(5vmin);
}

:is(.jedi) .body #body .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 9vmin;
    height: 10vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(5vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .body #body .container .left {
    background-image: linear-gradient(90deg, #000 0 0% 40%, #2f2a36 40% 60%, #000 0 60% 100%), linear-gradient(180deg, #f14749 0% 30%, #000 0 60% 100%);
}

:is(.jedi) .body #body .container .front,
:is(.jedi) .body #body .container .back,
:is(.jedi) .body #body .container .right {
    background-image: linear-gradient(180deg, #f14749 0% 30%, #000 0 60% 100%);
}

:is(.jedi) .body #body .container .top {
    background-image: radial-gradient(circle, #000 a 0% 50%, #000 0 100%);
}

:is(.jedi) .legs .leg-left {
    width: 2vmin;
    height: 11vmin;
    transform: translate3d(4vmin, -5vmin, 2.5vmin) rotateY(10deg);
}

:is(.jedi) .legs .leg-left #leg-left {
    width: 2vmin;
    height: 11vmin;
}

:is(.jedi) .legs .leg-left #leg-left .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .legs .leg-left #leg-left .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .legs .leg-left #leg-left .container .left {
    width: 2vmin;
    height: 11vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .legs .leg-left #leg-left .container .right {
    width: 2vmin;
    height: 11vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .legs .leg-left #leg-left .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(11vmin);
}

:is(.jedi) .legs .leg-left #leg-left .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .legs .leg-left #leg-left .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .legs .leg-left #leg-left .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 11vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .legs .leg-left #foot-left {
    width: 4vmin;
    height: 2vmin;
    transform: translate3d(-2vmin, 2vmin, 0vmin);
}

:is(.jedi) .legs .leg-left #foot-left .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .legs .leg-left #foot-left .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .legs .leg-left #foot-left .container .left {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .legs .leg-left #foot-left .container .right {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(4vmin);
}

:is(.jedi) .legs .leg-left #foot-left .container .top {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(2vmin);
}

:is(.jedi) .legs .leg-left #foot-left .container .bottom {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .legs .leg-left #foot-left .container .front {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .legs .leg-left #foot-left .container .back {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .legs .leg-right {
    width: 2vmin;
    height: 11vmin;
    transform: translate3d(4vmin, -5vmin, -2.5vmin) rotateY(-10deg);
}

:is(.jedi) .legs .leg-right #leg-right {
    width: 2vmin;
    height: 11vmin;
}

:is(.jedi) .legs .leg-right #leg-right .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .legs .leg-right #leg-right .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .legs .leg-right #leg-right .container .left {
    width: 2vmin;
    height: 11vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .legs .leg-right #leg-right .container .right {
    width: 2vmin;
    height: 11vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .legs .leg-right #leg-right .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(11vmin);
}

:is(.jedi) .legs .leg-right #leg-right .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .legs .leg-right #leg-right .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 11vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .legs .leg-right #leg-right .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 11vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .legs .leg-right #foot-right {
    width: 4vmin;
    height: 2vmin;
    transform: translate3d(-2vmin, 2vmin, 0vmin);
}

:is(.jedi) .legs .leg-right #foot-right .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .legs .leg-right #foot-right .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .legs .leg-right #foot-right .container .left {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .legs .leg-right #foot-right .container .right {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(4vmin);
}

:is(.jedi) .legs .leg-right #foot-right .container .top {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(2vmin);
}

:is(.jedi) .legs .leg-right #foot-right .container .bottom {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .legs .leg-right #foot-right .container .front {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .legs .leg-right #foot-right .container .back {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 4vmin;
    height: 2vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .arms .arm-left {
    width: 10vmin;
    height: 10vmin;
    transform: translate3d(0, -14vmin, 5vmin);
    animation: rotLeftArm 4s ease-in-out infinite alternate;
}

@keyframes rotLeftArm {

    0%,
    20% {
        transform: translate3d(0, -14vmin, 5vmin) rotateY(5deg) rotateX(5deg) rotateZ(-5deg);
    }

    100% {
        transform: translate3d(0, -14vmin, 5vmin) rotateY(10deg) rotateX(10deg) rotateZ(25deg);
    }
}

:is(.jedi) .arms .arm-left #arm-left {
    width: 2vmin;
    height: 5vmin;
    transform: translate3d(4vmin, -1vmin, 1vmin);
}

:is(.jedi) .arms .arm-left #arm-left .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-left #arm-left .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-left #arm-left .container .left {
    width: 2vmin;
    height: 5vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .arms .arm-left #arm-left .container .right {
    width: 2vmin;
    height: 5vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-left #arm-left .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(5vmin);
}

:is(.jedi) .arms .arm-left #arm-left .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .arms .arm-left #arm-left .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 5vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .arms .arm-left #arm-left .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 5vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .arms .arm-left .elbow-left {
    width: 10vmin;
    height: 10vmin;
    transform: translate3d(1vmin, 4vmin, 0vmin) rotateZ(0deg);
    animation: rotLeftElbow 8s ease-in-out infinite alternate;
}

@keyframes rotLeftElbow {

    0%,
    20%,
    100% {
        transform: translate3d(1vmin, 4vmin, 0vmin) rotateZ(10deg);
    }

    40% {
        transform: translate3d(1vmin, 4vmin, 0vmin) rotateZ(50deg);
    }
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom {
    width: 2vmin;
    height: 4vmin;
    transform: translate3d(3vmin, -1vmin, 1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container .left {
    width: 2vmin;
    height: 4vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container .right {
    width: 2vmin;
    height: 4vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(4vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 4vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #arm-left-bottom .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 4vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left {
    width: 2vmin;
    height: 2vmin;
    transform: translate3d(3vmin, 1vmin, 1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container .left {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container .right {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .arms .arm-left .elbow-left #hand-left .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .arms .arm-right {
    width: 10vmin;
    height: 10vmin;
    animation: rotRightArm 6s ease-in-out infinite alternate;
}

@keyframes rotRightArm {

    0%,
    20% {
        transform: translate3d(0, -14vmin, -5vmin) rotateY(-10deg) rotateX(-5deg) rotateZ(15deg);
    }

    45% {
        transform: translate3d(0, -14vmin, -5vmin) rotateY(-10deg) rotateX(-15deg) rotateZ(85deg);
    }

    65% {
        transform: translate3d(0, -14vmin, -5vmin) rotateY(-10deg) rotateX(15deg) rotateZ(65deg);
    }

    80% {
        transform: translate3d(0, -14vmin, -5vmin) rotateY(-10deg) rotateX(-20deg) rotateZ(85deg);
    }

    100% {
        transform: translate3d(0, -14vmin, -5vmin) rotateY(-10deg) rotateX(-15deg) rotateZ(85deg);
    }
}

:is(.jedi) .arms .arm-right #arm-right {
    width: 2vmin;
    height: 9vmin;
    transform: translate3d(4vmin, 3vmin, -1vmin);
}

:is(.jedi) .arms .arm-right #arm-right .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-right #arm-right .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-right #arm-right .container .left {
    width: 2vmin;
    height: 9vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .arms .arm-right #arm-right .container .right {
    width: 2vmin;
    height: 9vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-right #arm-right .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(9vmin);
}

:is(.jedi) .arms .arm-right #arm-right .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .arms .arm-right #arm-right .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 9vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .arms .arm-right #arm-right .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 9vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .arms .arm-right #hand-right {
    width: 2vmin;
    height: 2vmin;
    transform: translate3d(4vmin, 5vmin, -1vmin);
}

:is(.jedi) .arms .arm-right #hand-right .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-right #hand-right .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-right #hand-right .container .left {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-1vmin);
}

:is(.jedi) .arms .arm-right #hand-right .container .right {
    width: 2vmin;
    height: 2vmin;
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-1vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-right #hand-right .container .top {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(1vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-right #hand-right .container .bottom {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(1vmin);
}

:is(.jedi) .arms .arm-right #hand-right .container .front {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: bottom left;
    transform: translateZ(1vmin);
}

:is(.jedi) .arms .arm-right #hand-right .container .back {
    background: linear-gradient(to bottom right, rgb(4, 130, 247), rgb(77, 4, 247));
    width: 2vmin;
    height: 2vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(1vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber {
    width: 20vmin;
    height: 1.5vmin;
    transform-origin: bottom right;
    transform: translate3d(-17vmin, 4.75vmin, -1vmin) scale3d(0, 1, 1);
    animation: extendLightsaber 6s ease-in infinite alternate;
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container .left {
    width: 1.5vmin;
    height: 1.5vmin;
    background: red;
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container .right {
    width: 1.5vmin;
    height: 1.5vmin;
    background: red;
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-0.75vmin) translateZ(20vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container .top {
    background: red;
    width: 20vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(0.75vmin) translateZ(1.5vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container .bottom {
    background: red;
    width: 20vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container .front {
    background: red;
    width: 20vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: translateZ(0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container .back {
    background: red;
    width: 20vmin;
    height: 1.5vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(0.75vmin) rotateX(180deg) rotateZ(180deg);
}

@keyframes extendLightsaber {

    0%,
    35% {
        transform: translate3d(-17vmin, 4.75vmin, -1vmin) scale3d(0, 1, 1);
    }

    40%,
    100% {
        transform: translate3d(-17vmin, 4.75vmin, -1vmin) scale3d(1, 1, 1);
    }
}

:is(.jedi) .arms .arm-right .light-saber #light-saber .container .front,
:is(.jedi) .arms .arm-right .light-saber #light-saber .container .back,
:is(.jedi) .arms .arm-right .light-saber #light-saber .container .top,
:is(.jedi) .arms .arm-right .light-saber #light-saber .container .bottom,
:is(.jedi) .arms .arm-right .light-saber #light-saber .container .left {
    animation: glowLightsaber 6s ease-in infinite alternate;
}

@keyframes glowLightsaber {

    0%,
    35% {
        box-shadow: 0 0 1.25vmin 0 #000 0;
    }

    40%,
    100% {
        box-shadow: 0 0 1.25vmin 0 red;
    }
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster {
    width: 1vmin;
    height: 1.5vmin;
    transform: translate3d(3vmin, 4.75vmin, -1vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container .left {
    width: 1.5vmin;
    height: 1.5vmin;
    background-color: black;
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container .right {
    width: 1.5vmin;
    height: 1.5vmin;
    background-color: black;
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-0.75vmin) translateZ(1vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container .top {
    background-color: #0d0d0d;
    width: 1vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(0.75vmin) translateZ(1.5vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container .bottom {
    background-color: #0d0d0d;
    width: 1vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container .front {
    background-color: #000;
    width: 1vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: translateZ(0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-bolster .container .back {
    background-color: #000;
    width: 1vmin;
    height: 1.5vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(0.75vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle {
    width: 2vmin;
    height: 1.5vmin;
    transform: translate3d(6vmin, 4.75vmin, -1vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container {
    position: relative;
    width: 100%;
    height: 100%;
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container * {
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container .left {
    width: 1.5vmin;
    height: 1.5vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(-90deg) translateX(-0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container .right {
    width: 1.5vmin;
    height: 1.5vmin;
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    transform-origin: left top;
    transform: rotateY(90deg) translateX(-0.75vmin) translateZ(2vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container .top {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 2vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: rotateX(90deg) translateY(0.75vmin) translateZ(1.5vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container .bottom {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 2vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateY(0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container .front {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 2vmin;
    height: 1.5vmin;
    transform-origin: bottom left;
    transform: translateZ(0.75vmin);
}

:is(.jedi) .arms .arm-right .light-saber #light-saber-handle .container .back {
    background: linear-gradient(to bottom right, rgb(20, 20, 20), rgb(10, 10, 10));
    width: 2vmin;
    height: 1.5vmin;
    transform-origin: center;
    transform: rotateY(180deg) translateZ(0.75vmin) rotateX(180deg) rotateZ(180deg);
}

:is(.the-entrance-of-about-me) {

    position: absolute;
    top: 75%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 8rem;
    aspect-ratio: 1;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;

    transition: all 0.7s ease-in-out;

    z-index: 2;
    cursor: pointer;

    opacity: 1;
    visibility: visible;

}

:is(.button-for-the-entrance-of-about-me) {

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex-grow: 0;
    flex-shrink: 0;

    position: relative;
    margin: 0;
    outline: 0;

    width: 195px;
    height: 50%;
    background: transparent;
    border: 0;
    border-radius: 0.5rem;

    font-size: 3rem;
    font-weight: bold;
    letter-spacing: 1rem;
    text-shadow: 1px 1px 1px #292929,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000,
        .2rem .2rem .2rem #000000;

    transition: all 1s ease-in-out;

}

:is(.clicked) {
    color: #ffffff;
    transition: color 2s ease-in-out;
}

:is(.allowing-the-user) {
    opacity: 0;
    visibility: hidden;
    transition: opacity 1.5s ease-in-out, visibility 1.5s ease-in-out;
    transition-delay: 7s;
}

:is(.not-clicked) {
    color: #292929;
    transition: color 2s ease-in-out;
}

:is(.not-allowing-the-user) {
    opacity: 1;
    visibility: visible;
    transition: opacity 1s ease-in-out, visibility 1s ease-in-out;
    transition-delay: 1.5s;
}

:is(.loading-lights-of-button-for-the-entrance-of-about-me) {

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;

    position: absolute;
    top: 4.5rem;
    left: 0;

    transition: all 0.7s ease-in-out;

}

:is(.loading-light-of-button-for-the-entrance-of-about-me) {

    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;

    box-shadow:
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000,
        0.1rem 0.1rem 0.1rem #000000;

    transition: all 0.7s ease-in-out;

}

:is(.lights-on) {
    --lights-on-background-1: rgb(247, 4, 174);
    --lights-on-background-2: rgb(231, 247, 4);
    --lights-on-background-3: rgb(247, 4, 77);
    --lights-on-background-4: rgb(4, 130, 247);
    --lights-on-background-5: rgb(247, 4, 4);
    --lights-on-background-6: rgb(24, 247, 4);
    --lights-on-background-7: rgb(247, 4, 174);
    --lights-on-background-8: rgb(247, 223, 4);
    --lights-on-background-9: rgb(247, 4, 4);
    --lights-on-background-10: rgb(4, 130, 247);
    --lights-on-background-11: rgb(247, 223, 4);
    --lights-on-background-12: rgb(24, 247, 4);
    transition: background 1s ease-in-out;
}

:is(.lights-on):nth-child(1) {
    background: var(--lights-on-background-1);
    transition-delay: 0.2s;
}

:is(.lights-on):nth-child(2) {
    background: var(--lights-on-background-2);
    transition-delay: 0.4s;
}

:is(.lights-on):nth-child(3) {
    background: var(--lights-on-background-3);
    transition-delay: 0.6s;
}

:is(.lights-on):nth-child(4) {
    background: var(--lights-on-background-4);
    transition-delay: 0.8s;
}

:is(.lights-on):nth-child(5) {
    background: var(--lights-on-background-5);
    transition-delay: 1s;
}

:is(.lights-on):nth-child(6) {
    background: var(--lights-on-background-6);
    transition-delay: 1.2s;
}

:is(.lights-on):nth-child(7) {
    background: var(--lights-on-background-7);
    transition-delay: 1.4s;
}

:is(.lights-on):nth-child(8) {
    background: var(--lights-on-background-8);
    transition-delay: 1.6s;
}

:is(.lights-on):nth-child(9) {
    background: var(--lights-on-background-9);
    transition-delay: 1.8s;
}

:is(.lights-on):nth-child(10) {
    background: var(--lights-on-background-10);
    transition-delay: 2s;
}

:is(.lights-on):nth-child(11) {
    background: var(--lights-on-background-11);
    transition-delay: 2.2s;
}

:is(.lights-on):nth-child(12) {
    background: var(--lights-on-background-12);
    transition-delay: 2.4s;
}

:is(.lights-off) {
    background: rgb(29, 29, 29);
    transition: background 1s ease-in-out;
}

.hover-area {
    width: 195px;
    height: 75px;
    display: grid;
    grid-template-columns: repeat(13, 15px);
    grid-template-rows: repeat(5, 15px);
    position: absolute;
    top: 0;
    left: 0;
    perspective: 500px;
}

.hover-area .hover-directions {
    z-index: 1;
}

.hover-area .hover-directions:nth-child(1):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(-90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(2):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(-75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(3):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(-60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(4):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(-45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(5):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(-30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(6):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(-15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(7):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(0deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(8):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(9):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(10):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(11):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(12):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(13):hover~.icon-about-me {
    transform: scale(1) rotateX(45deg) rotateY(90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(14):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(-90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(15):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(-75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(16):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(-60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(17):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(-45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(18):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(-30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(19):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(-15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(20):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(0deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(21):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(22):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(23):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(24):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(25):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(26):hover~.icon-about-me {
    transform: scale(1) rotateX(22.5deg) rotateY(90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(27):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(-90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(28):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(-75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(29):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(-60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(30):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(-45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(31):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(-30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(32):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(-15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(33):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(0deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(34):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(35):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(36):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(37):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(38):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(39):hover~.icon-about-me {
    transform: scale(1) rotateX(0deg) rotateY(90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(40):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(-90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(41):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(-75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(42):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(-60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(43):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(-45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(44):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(-30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(45):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(-15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(46):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(0deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(47):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(48):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(49):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(50):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(51):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(52):hover~.icon-about-me {
    transform: scale(1) rotateX(-22.5deg) rotateY(90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(53):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(-90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(54):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(-75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(55):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(-60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(56):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(-45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(57):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(-30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(58):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(-15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(59):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(0deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(60):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(15deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(61):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(30deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(62):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(45deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(63):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(60deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(64):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(75deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .hover-directions:nth-child(65):hover~.icon-about-me {
    transform: scale(1) rotateX(-45deg) rotateY(90deg);
    transition: transform 380ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
}

.hover-area .icon-about-me {
    width: 80px;
    height: 80px;
    position: absolute;
    bottom: 91px;
    left: calc(50% - 40px);
    transform-origin: bottom center;
    transform-style: preserve-3d;
    transform: scale(0);
    transition: transform 225ms ease-out;
}

.hover-area .icon-about-me .roof {
    height: 90px;
    position: absolute;
    left: 50%;
    transform-origin: bottom center;
    transform-style: preserve-3d;
    transform: translateZ(45px) rotateX(90deg);
}

.hover-area .icon-about-me .roof.roof.roof-1 {
    top: -90px;
}

.hover-area .icon-about-me .roof.roof.roof-2 {
    top: -110px;
}

.hover-area .icon-about-me .roof:before,
.hover-area .icon-about-me .roof:after {
    content: '';
    background-color: #554d73;
    width: 70px;
    height: 100%;
    position: absolute;
    top: 0;
    transform-style: preserve-3d;
}

.hover-area .icon-about-me .roof:before {
    right: 0;
    transform-origin: bottom right;
    transform: rotateY(-37.5deg);
    filter: brightness(105%);
}

.hover-area .icon-about-me .roof:after {
    left: 0;
    transform-origin: bottom left;
    transform: rotateY(37.5deg);
    filter: brightness(95%);
}

.hover-area .icon-about-me .roof-design {
    height: 20px;
    position: absolute;
    top: -20px;
    left: 50%;
    transform-style: preserve-3d;
}

.hover-area .icon-about-me .roof-design.roof-design-1 {
    transform: translateZ(45px);
}

.hover-area .icon-about-me .roof-design.roof-design-2 {
    transform: translateZ(-45px);
}

.hover-area .icon-about-me .roof-design:before,
.hover-area .icon-about-me .roof-design:after {
    content: '';
    background-color: #554d73;
    width: 55px;
    height: 20px;
    position: absolute;
    top: 0;
    transform-style: preserve-3d;
}

.hover-area .icon-about-me .roof-design:before {
    right: 0;
    transform-origin: bottom right;
    transform: skewY(-37.5deg);
}

.hover-area .icon-about-me .roof-design:after {
    left: 0;
    transform-origin: bottom left;
    transform: skewY(37.5deg);
}

.hover-area .icon-about-me .roof-side {
    background-color: #554d73;
    width: 90px;
    height: 20px;
    position: absolute;
    top: 22px;
    transform-origin: top left;
    transform-style: preserve-3d;
    transform: translateZ(45px) rotateY(90deg);
}

.hover-area .icon-about-me .roof-side.roof-side-1 {
    left: -15px;
    filter: brightness(105%);
}

.hover-area .icon-about-me .roof-side.roof-side-2 {
    right: -105px;
    filter: brightness(95%);
}

.hover-area .icon-about-me .roof-wall {
    border-top: none;
    border-bottom: solid 31px #a5a7bb;
    border-left: solid 40px transparent;
    border-right: solid 40px transparent;
    position: absolute;
    top: 0;
    left: 0;
    transform-style: preserve-3d;
}

.hover-area .icon-about-me .roof-wall.roof-wall-1 {
    transform: translateZ(40px);
}

.hover-area .icon-about-me .roof-wall.roof-wall-2 {
    transform: translateZ(-40px);
}

.hover-area .icon-about-me .wall {
    background-color: #a5a7bb;
    width: 81px;
    height: 50px;
    position: absolute;
    bottom: 0;
    left: 0;
    transform-origin: center;
    transform-style: preserve-3d;
}

.hover-area .icon-about-me .wall.wall-1 {
    transform: translateZ(40px);
}

.hover-area .icon-about-me .wall.wall-2 {
    transform: translateZ(-40px);
    filter: brightness(90%);
}

.hover-area .icon-about-me .wall.wall-3 {
    transform: rotateY(90deg) translateZ(-40px);
    filter: brightness(105%);
}

.hover-area .icon-about-me .wall.wall-4 {
    transform: rotateY(90deg) translateZ(40px);
    filter: brightness(95%);
}

.hover-area .icon-about-me .door {
    background-color: #a496a4;
    width: 30px;
    height: 40px;
    position: absolute;
    bottom: 0;
    left: calc(50% - 15px);
    transform-style: preserve-3d;
    transform: translateZ(40px);
}

.hover-area .icon-about-me .floor {
    background-color: #a5a7bb;
    width: 81px;
    height: 81px;
    position: absolute;
    bottom: 0;
    left: 0;
    transform-origin: center;
    transform-style: preserve-3d;
    transform: rotateX(90deg) translateZ(-40px) scale(1.01);
    filter: brightness(90%);
}

/* Styles For .my-about-me div And For It's Children's div */

:is(.about-me) {

    --about-me-margin-top: 25rem;
    --about-me-background: rgb(10, 10, 10);
    --about-me-clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
    --about-me-height: 50rem;

    position: relative;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: var(--about-me-margin-top);

    background: var(--about-me-background);
    clip-path: var(--about-me-clip-path);

    width: 100%;
    height: var(--about-me-height);

    transition: all 1.5s ease-in-out;

}

:is(.about-me) h2 {

    --about-me-h2-margin-top: 1rem;
    --about-me-h2-font-color: rgb(4, 247, 85);
    --about-me-h2-font-size: 4.3rem;
    --about-me-h2-letter-spacing: 0.2rem;
    --about-me-h2-text-shadow:
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .1rem .1rem #101010,
        0 .1rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .1rem .1rem #101010,
        0 .1rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .1rem .1rem #101010,
        0 .1rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .2rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .3rem .1rem #101010,
        0 .1rem .1rem #101010,
        0 .1rem .1rem #101010;

    --about-me-h2-transition: all 1.5s ease-in-out;

    position: relative;
    margin-top: var(--about-me-h2-margin-top);

    color: var(--about-me-h2-font-color);
    font-size: var(--about-me-h2-font-size);
    font-weight: 800;
    letter-spacing: var(--about-me-h2-letter-spacing);
    text-shadow: var(--about-me-h2-text-shadow);
    white-space: nowrap;

    transition: var(--about-me-h2-transition);

}

:is(.about-me) span {

    --about-me-span-margin-top: 1rem;
    --about-me-span-color: rgb(200, 200, 200);
    --about-me-span-font-size: 1.1rem;
    --about-me-span-margin-top: 1rem;
    --about-me-span-text-shadow: 0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010;

    margin-top: var(--about-me-span-margin-top);
    color: var(--about-me-span-color);
    font-size: var(--about-me-span-font-size);
    text-shadow: var(--about-me-span-text-shadow);
    font-weight: 500;
    text-transform: uppercase;

}

:is(.about-me) p {

    --about-me-p-width: 60rem;
    --about-me-p-color: rgb(200, 200, 200);
    --about-me-p-font-size: 1.3rem;
    --about-me-p-line-height: 2.1rem;
    --about-me-p-text-shadow:
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010;

    width: var(--about-me-p-width);
    color: var(--about-me-p-color);
    text-shadow: var(--about-me-p-text-shadow);
    font-size: var(--about-me-p-font-size);
    font-weight: normal;
    text-align: justify;
    line-height: var(--about-me-p-line-height);

}

:is(.about-me) .tech-images {

    --tech-images-gap: 3.5rem;
    --tech-images-margin-top: 2rem;
    --tech-images-transition: all 1.5s ease-in-out;

    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: var(--tech-images-gap);
    margin-top: var(--tech-images-margin-top);
    transition: var(--tech-images-transition);

}

:is(.about-me, .tech-images) .prog-lang {

    --prog-lang: all 1.5s ease-in-out;

    position: relative;
    transition: var(--prog-lang);

}

:is(.about-me, .tech-images) .prog-lang::before {

    --prog-lang-before-transform: translate(-50%, -50%);
    --prog-lang-before-font-size: 1.1rem;
    --prog-lang-before-color: #ffffff;
    --prog-lang-before-background: rgb(4, 247, 85);
    --prog-lang-before-width: 7.5rem;
    --prog-lang-before-height: 2.1rem;
    --prog-lang-before-padding: 0.5rem;
    --prog-lang-before-text-shadow:
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010,
        0 .1rem 0.1rem #101010;
    --prog-lang-before-transition: all 1.5s ease-in-out;

    display: flex;
    align-items: center;
    justify-content: center;

    position: absolute;
    top: 5.7rem;
    left: 50%;
    transform: var(--prog-lang-before-transform);

    font-size: var(--prog-lang-before-font-size);
    color: var(--prog-lang-before-color);
    background: var(--prog-lang-before-background);
    width: var(--prog-lang-before-width);
    height: var(--prog-lang-before-height);
    border-radius: 0.5rem;
    padding: var(--prog-lang-before-padding);
    text-shadow: var(--prog-lang-before-text-shadow);

    transition: --prog-lang-before-transition;
    z-index: 1;

}

:is(.about-me, .tech-images) .prog-lang:nth-child(1)::before {
    content: 'HTML5';
}

:is(.about-me, .tech-images) .prog-lang:nth-child(2)::before {
    content: 'CSS3';
}

:is(.about-me, .tech-images) .prog-lang:nth-child(3)::before {
    content: 'BOOTSTRAP';
}

:is(.about-me, .tech-images) .prog-lang:nth-child(4)::before {
    content: 'JAVASCRIPT';
}

:is(.about-me, .tech-images) .prog-lang:nth-child(5)::before {
    content: 'MONGODB';
}

:is(.about-me, .tech-images) .prog-lang:nth-child(6)::before {
    content: 'EXPRESS.JS';
}

:is(.about-me, .tech-images) .prog-lang:nth-child(7)::before {
    content: 'REACT.JS';
}

:is(.about-me, .tech-images) .prog-lang:nth-child(8)::before {
    content: 'NODE.JS';
}

:is(.about-me, .tech-images) .prog-lang::after {

    --prog-lang-after-transform: perspective(100em) translateZ(0px) translateX(15%) translateY(-45%) rotateY(-105deg);
    --prog-lang-after-width: 25rem;
    --prog-lang-after-height: 4rem;
    --prog-lang-after-background: #101010;
    --prog-lang-after-transition: all 1.5s ease-in-out;

    content: '';

    position: absolute;
    top: 50%;
    left: 50%;
    transform: var(--prog-lang-after-transform);
    transform-origin: left;

    width: var(--prog-lang-after-width);
    height: var(--prog-lang-after-height);
    background: var(--prog-lang-after-background);

    transition: var(--prog-lang-after-transition);
    z-index: -1;

}

:is(.tech-images, .prog-lang) img {

    --prog-lang-img: 5rem;
    --prog-lang-padding: 0.6rem;

    width: var(--prog-lang-img);
    aspect-ratio: 1;
    padding: var(--prog-lang-padding);

}

img.express {

    --express-img-width: 8.5rem;
    --express-img-height: 5rem;
    --express-img-margin-left: -1.8rem;
    --express-img-margin-right: -1.5rem;

    width: var(--express-img-width);
    height: var(--express-img-height);
    margin-left: var(--express-img-margin-left);
    margin-right: var(--express-img-margin-right);

}

/* Styles For .my-about-me div And For It's Children's div */


/* - - - - - - - - - - - - - */

/* ---X-X-X-X-X--- MEDIA_QUERIES ---X-X-X-X-X--- */

/* XXX-----XXX-----XXX Styles For Screen Width 1309px || 81.813rem XXX-----XXX-----XXX */

@media screen and (width <=81.813rem) {

    /* :is(.about-me) {
        left: 50%;
        transform: translateX(-50%);
        width: 85%;
    } */

}

/* XXX-----XXX-----XXX Styles For Screen Width 1309px || 81.813rem XXX-----XXX-----XXX */

/* XXX-----XXX-----XXX Styles For Screen Width 1150px || 71.875rem XXX-----XXX-----XXX */

@media screen and (width <=71.875rem) {

    :is(.my-car) {
        transform: translateX(-1rem) translateY(-12rem);
    }

    :is(.my-car-body)::before,
    :is(.my-car-body)::after {

        --my-assistant-body-before-width: 35rem;
        --my-assistant-body-before-height: 46.84rem;

        --my-assistant-body-after-width: 28rem;
        --my-assistant-body-after-height: 70rem;

    }

    :is(.my-car-body)::before {
        top: -4.60rem;
        left: -5.60rem;
    }

    :is(.my-car-body)::after {
        top: -15rem;
        right: 0rem;
    }

    :is(.my-car-tires):before,
    :is(.my-car-tires):after {
        --my-assistant-face-before-width: 9rem;
        top: 26.5rem;
    }

    :is(.my-car-tires):before {
        right: 5rem;
    }

    :is(.my-car-tires):after {
        left: 14.20rem;
    }

    :is(.my-car-inside-rims) {
        top: 29.1rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim {
        --my-assistant-eye-width: 4rem;
        top: 50%;
        left: 50%;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(1) {
        left: 3.50rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(2) {
        left: 0.65rem;
    }

    :is(.my-car-outside-rims) {
        top: 30.95rem;
    }

    :is(.my-car-outside-rim) {
        --my-assistant-ear-width: 6rem;
    }

    :is(.my-car-outside-rim):nth-child(1) {
        right: 6.60rem;
    }

    :is(.my-car-outside-rim):nth-child(2) {
        left: 6.75rem;
    }

    :is(.my-car-interior) {
        top: 21.25rem;
        left: 0.1rem;
        transform: translate(-50%, -50%);
        width: 33.5rem;
        height: 24rem;
        clip-path:
            polygon(0 19.35%, 0 84%, 0 66%, 18% 66%, 27.5% 85%, 50% 85%, 72.5% 85%, 82% 66%,
                100% 66%, 100% 85%, 100% 15.35%, 50% 4.5%);
    }

    :is(.window-lines) {
        top: 22.8%;
        height: 8.20rem;
        clip-path:
            polygon(0 48%, 49.50% 5%, 49.50% 100%, 50.70% 100%, 50.70% 5%, 100% 35%, 100% 35%,
                100% 35%, 100% 35%, 100% 35%, 100% 35%, 50% 0%);
    }

    :is(.my-car-door-handle) {
        top: 13.3rem;
        left: 29rem;
        width: 7.5rem;
    }

    :is(.my-car-front-light) {
        top: 14.30rem;
        left: -26.11rem;
        transform: rotate(79.5deg);
        width: 4.3rem;
        aspect-ratio: 1;
    }

    :is(.my-car-front-indicator) {
        --my-assistant-power-width: 4.45rem;
        top: 31rem;
        left: -22.45rem;
    }

    :is(.my-car-gas-cap) {
        top: 22rem;
        left: 23rem;
        width: 3.75rem;
    }

    :is(.my-car-gas-cap)::after {
        width: 3rem;
    }

    :is(.my-car-silencer-1),
    :is(.my-car-silencer-2) {
        left: 26rem;
        width: 9rem;
    }

    :is(.my-car-silencer-1) {
        top: 25.85rem;
    }

    :is(.my-car-silencer-2) {
        top: 27.85rem;
    }

}

/* XXX-----XXX-----XXX Styles For Screen Width 1150px || 71.875rem XXX-----XXX-----XXX */

/* XXX-----XXX-----XXX Styles For Screen Width 975px || 60.938rem XXX-----XXX-----XXX */

@media screen and (width <=60.938rem) {

    :is(.my-car) {
        transform: translateX(-0.5rem) translateY(-12rem);
    }

    :is(.my-car-body)::before,
    :is(.my-car-body)::after {

        --my-assistant-body-before-width: 29rem;
        --my-assistant-body-before-height: 43.50rem;

        --my-assistant-body-after-width: 23.5rem;
        --my-assistant-body-after-height: 65rem;

    }

    :is(.my-car-body)::before {
        top: -4.35rem;
        left: -4.68rem;
    }

    :is(.my-car-body)::after {
        top: -14rem;
    }

    :is(.my-car-tires):before,
    :is(.my-car-tires):after {
        --my-assistant-face-before-width: 8rem;
        top: 24.60rem;
    }

    :is(.my-car-tires):before {
        right: 3.78rem;
    }

    :is(.my-car-tires):after {
        left: 11.70rem;
    }

    :is(.my-car-inside-rims) {
        top: 26.80rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim {
        --my-assistant-eye-width: 3.70rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(1) {
        left: 5.4rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(2) {
        left: -1.80rem;
    }

    :is(.my-car-outside-rims) {
        top: 28.55rem;
    }

    :is(.my-car-outside-rim) {
        --my-assistant-ear-width: 5.5rem;
    }

    :is(.my-car-outside-rim):nth-child(1) {
        right: 4.65rem;
    }

    :is(.my-car-outside-rim):nth-child(2) {
        left: 4.58rem;
    }

    :is(.my-car-interior) {
        top: 19.65rem;
        left: 0;
        width: 28rem;
        height: 22.5rem;
        clip-path:
            polygon(0 19.35%, 0 84%, 0 66%, 18% 66%, 27.5% 85%, 50% 85%, 72.5% 85%, 82% 66%,
                100% 66%, 100% 85%, 100% 15.35%, 50.5% 4.5%);
    }

    :is(.window-lines) {
        top: 22.8%;
        height: 7.80rem;
        clip-path:
            polygon(0 48%, 49.95% 5%, 49.95% 100%, 51.1% 100%, 51.1% 5%, 100% 35%, 100% 35%,
                100% 35%, 100% 35%, 100% 35%, 100% 35%, 50.5% 0%);
    }

    :is(.my-car-window-lock) {
        left: 94%;
    }

    :is(.my-car-door-handle) {
        top: 12.5rem;
        left: 24rem;
        width: 7rem;
    }

    :is(.my-car-front-light) {
        top: 13rem;
        left: -21.5rem;
        transform: rotate(78deg);
        width: 4.1rem;
    }

    :is(.my-car-front-indicator) {
        --my-assistant-power-width: 3.72rem;
        top: 28.80rem;
        left: -18.80rem;
    }

    :is(.my-car-gas-cap) {
        top: 20rem;
        left: 18.75rem;
        width: 3.50rem;
    }

    :is(.my-car-gas-cap)::after {
        width: 2.8rem;
    }

    :is(.my-car-silencer-1),
    :is(.my-car-silencer-2) {
        left: 21.20rem;
        width: 9rem;
    }

    :is(.my-car-silencer-1) {
        top: 23.6rem;
    }

    :is(.my-car-silencer-2) {
        top: 25.6rem;
    }

}

/* XXX-----XXX-----XXX Styles For Screen Width 975px || 60.938rem XXX-----XXX-----XXX */

/* XXX-----XXX-----XXX Styles For Screen Width 830px || 51.875rem XXX-----XXX-----XXX */

@media screen and (width <=51.875rem) {

    :is(.my-car) {
        transform: translateX(-0.5rem) translateY(-5rem);
    }

    :is(.my-car-body)::before,
    :is(.my-car-body)::after {

        --my-assistant-body-before-width: 25.5rem;
        --my-assistant-body-before-height: 41.35rem;

        --my-assistant-body-after-width: 20.5rem;
        --my-assistant-body-after-height: 62rem;

    }

    :is(.my-car-body)::before {
        top: -4.70rem;
        left: -4.2rem;
    }

    :is(.my-car-tires):before,
    :is(.my-car-tires):after {
        --my-assistant-face-before-width: 7rem;
        top: 22.75rem;
    }

    :is(.my-car-tires):before {
        right: 3.22rem;
    }

    :is(.my-car-tires):after {
        left: 10.22rem;
    }

    :is(.my-car-inside-rims) {
        top: 24.68rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim {
        --my-assistant-eye-width: 3.40rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(1) {
        left: 6.60rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(2) {
        left: -3.25rem;
    }

    :is(.my-car-outside-rims) {
        top: 26.25rem;
    }

    :is(.my-car-outside-rim) {
        --my-assistant-ear-width: 5rem;
    }

    :is(.my-car-outside-rim):nth-child(1) {
        right: 3.39rem;
    }

    :is(.my-car-outside-rim):nth-child(2) {
        left: 3.33rem;
    }

    :is(.my-car-interior) {
        top: 18.1rem;
        width: 24.5rem;
        height: 21.5rem;
        clip-path:
            polygon(0 19.35%, 0 84%, 0 66%, 18% 66%, 27.5% 85%, 50% 85%, 72.5% 85%, 82% 66%,
                100% 66%, 100% 85%, 100% 15.35%, 50% 4.5%);
    }

    :is(.window-lines) {
        top: 22.8%;
        height: 7.50rem;
        clip-path:
            polygon(0 48%, 49.48% 5%, 49.48% 100%, 50.70% 100%, 50.70% 5%, 100% 35%, 100% 35%,
                100% 35%, 100% 35%, 100% 35%, 100% 35%, 50% 0%);
    }

    :is(.my-car-door-handle) {
        top: 11.90rem;
        left: 21rem;
        width: 6rem;
    }

    :is(.my-car-front-light) {
        top: 11.70rem;
        left: -18.55rem;
        transform: rotate(77.8deg);
        width: 3.9rem;
    }

    :is(.my-car-front-indicator) {
        --my-assistant-power-width: 3.25rem;
        top: 26.76rem;
        left: -16.38rem;
    }

    :is(.my-car-gas-cap) {
        top: 18.75rem;
        left: 16.55rem;
        width: 3.25rem;
    }

    :is(.my-car-silencer-1),
    :is(.my-car-silencer-2) {
        left: 18.55rem;
        width: 8rem;
    }

    :is(.my-car-silencer-1) {
        top: 21.95rem;
    }

    :is(.my-car-silencer-2) {
        top: 23.75rem;
    }

}

/* XXX-----XXX-----XXX Styles For Screen Width 830px || 51.875rem XXX-----XXX-----XXX */

/* XXX-----XXX-----XXX Styles For Screen Width 725px || 45.313rem XXX-----XXX-----XXX */

@media screen and (width <=45.313rem) {

    :is(.my-car) {
        transform: translateX(-0.5rem) translateY(-5rem);
    }

    :is(.my-car-body)::before,
    :is(.my-car-body)::after {

        --my-assistant-body-before-width: 21rem;
        --my-assistant-body-before-height: 39.95rem;

        --my-assistant-body-after-width: 17rem;
        --my-assistant-body-after-height: 60rem;

    }

    :is(.my-car-body)::before {
        top: -4.95rem;
        left: -3.4rem;
    }

    :is(.my-car-tires):before,
    :is(.my-car-tires):after {
        --my-assistant-face-before-width: 5.5rem;
        top: 21.50rem;
    }

    :is(.my-car-tires):before {
        right: 3rem;
    }

    :is(.my-car-tires):after {
        left: 8.47rem;
    }

    :is(.my-car-inside-rims) {
        top: 22.80rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim {
        --my-assistant-eye-width: 3rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(1) {
        left: 8rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(2) {
        left: -5.07rem;
    }

    :is(.my-car-outside-rims) {
        top: 24.25rem;
    }

    :is(.my-car-outside-rim) {
        --my-assistant-ear-width: 4rem;
    }

    :is(.my-car-outside-rim):nth-child(1) {
        right: 2.1rem;
    }

    :is(.my-car-outside-rim):nth-child(2) {
        left: 2.03rem;
    }

    :is(.my-car-interior) {
        top: 17.11rem;
        width: 20.40rem;
        height: 20.60rem;
        clip-path:
            polygon(0 19.35%, 0 84%, 0 66%, 18% 66%, 27.5% 85%, 50% 85%, 72.5% 85%, 82% 66%,
                100% 66%, 100% 85%, 100% 15.35%, 49.6% 4.5%);
    }

    :is(.window-lines) {
        top: 23%;
        height: 7.15rem;
        clip-path:
            polygon(0 48%, 49.11% 5%, 49.11% 100%, 50.65% 100%, 50.65% 5%, 100% 35%, 100% 35%,
                100% 35%, 100% 35%, 100% 35%, 100% 35%, 49.7% 0%);
    }

    :is(.my-car-window-lock) {
        left: 93%;
    }

    :is(.my-car-door-handle) {
        top: 11.30rem;
        left: 17rem;
        width: 5.5rem;
    }

    :is(.my-car-front-light) {
        top: 10.65rem;
        left: -14.20rem;
        transform: rotate(75.5deg);
        width: 1.95rem;
        background-size: 3.90rem;
    }

    :is(.my-car-front-indicator) {
        --my-assistant-power-width: 2.90rem;
        top: 25.45rem;
        left: -13.60rem;
    }

    :is(.my-car-gas-cap) {
        top: 17.5rem;
        left: 13.6rem;
        width: 3rem;
    }

    :is(.my-car-gas-cap)::after {
        width: 2.55rem;
    }

    :is(.my-car-silencer-1),
    :is(.my-car-silencer-2) {
        left: 15.4rem;
        width: 7rem;
    }

    :is(.my-car-silencer-1) {
        top: 21.1rem;
    }

    :is(.my-car-silencer-2) {
        top: 22.70rem;
    }

}

/* XXX-----XXX-----XXX Styles For Screen Width 725px || 45.313rem XXX-----XXX-----XXX */

/* XXX-----XXX-----XXX Styles For Screen Width 600px || 37.5rem XXX-----XXX-----XXX */

@media screen and (width <=37.5rem) {

    :is(.my-car) {
        transform: translateX(-0.5rem) translateY(-4rem);
    }

    :is(.my-car-body)::before,
    :is(.my-car-body)::after {

        --my-assistant-body-before-width: 18.25rem;
        --my-assistant-body-before-height: 36rem;

        --my-assistant-body-after-width: 15rem;
        --my-assistant-body-after-height: 54rem;

    }

    :is(.my-car-body)::before {
        top: -4.93rem;
        left: -3rem;
    }

    :is(.my-car-body)::after {
        top: -13rem;
    }

    :is(.my-car-tires):before,
    :is(.my-car-tires):after {
        --my-assistant-face-before-width: 5rem;
        top: 19rem;
    }

    :is(.my-car-tires):before {
        right: 2.5rem;
    }

    :is(.my-car-tires):after {
        left: 7.3rem;
    }

    :is(.my-car-inside-rims) {
        top: 20.18rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim {
        --my-assistant-eye-width: 2.8rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(1) {
        left: 8.77rem;
    }

    :is(.my-car-inside-rims) .my-car-inside-rim:nth-child(2) {
        left: -6.21rem;
    }

    :is(.my-car-outside-rims) {
        top: 21.5rem;
    }

    :is(.my-car-outside-rim) {
        --my-assistant-ear-width: 3.5rem;
    }

    :is(.my-car-outside-rim):nth-child(1) {
        right: 1.38rem;
    }

    :is(.my-car-outside-rim):nth-child(2) {
        left: 1.15rem;
    }

    :is(.my-car-interior) {
        top: 15rem;
        left: -0.09rem;
        width: 17.75rem;
        height: 18.75rem;
        clip-path:
            polygon(0 19.35%, 0 84%, 0 66%, 18% 66%, 27.5% 85%, 50% 85%, 72.5% 85%, 82% 66%,
                100% 66%, 100% 85%, 100% 15.35%, 50.5% 4.5%);
    }

    :is(.window-lines) {
        top: 23.4%;
        height: 6.6rem;
        clip-path:
            polygon(0 48%, 50% 5%, 50% 100%, 51.5% 100%, 51.5% 5%, 100% 35%, 100% 35%,
                100% 35%, 100% 35%, 100% 35%, 100% 35%, 50.5% 0%);
    }

    :is(.my-car-window-lock) {
        left: 92%;
    }

    :is(.my-car-door-handle) {
        top: 10.3rem;
        left: 14.50rem;
        width: 5.5rem;
    }

    :is(.my-car-front-light) {
        top: 9rem;
        left: -12.80rem;
        transform: rotate(75.5deg);
        width: 1.95rem;
        background-size: 3.8rem;
    }

    :is(.my-car-front-light)::after {
        height: 5rem;
    }

    :is(.my-car-front-indicator) {
        --my-assistant-power-width: 2.45rem;
        top: 22.5rem;
        left: -12rem;
    }

    :is(.my-car-gas-cap) {
        top: 15.4rem;
        left: 11.80rem;
        width: 2.8rem;
    }

    :is(.my-car-gas-cap)::after {
        width: 2rem;
    }

    :is(.my-car-silencer-1),
    :is(.my-car-silencer-2) {
        left: 13.4rem;
        width: 6rem;
    }

    :is(.my-car-silencer-1) {
        top: 18.55rem;
    }

    :is(.my-car-silencer-2) {
        top: 20rem;
    }

}

/* XXX-----XXX-----XXX Styles For Screen Width 600px || 37.5rem XXX-----XXX-----XXX */

/* ---X-X-X-X-X--- MEDIA_QUERIES ---X-X-X-X-X--- */